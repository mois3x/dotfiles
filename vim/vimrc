call pathogen#infect()
set nocompatible
syntax on
syntax enable
filetype plugin indent on
set shiftwidth=2
set tabstop=2
set expandtab
set colorcolumn=100
set encoding=utf-8
if has('gui_running')
    set background=light
    else
    set background=dark
endif
let g:solarized_termtrans = 1
colorscheme solarized
""let g:solarized_termcolors=16
call togglebg#map("<F5>")
let g:airline#extensions#tabline#enabled = 1
"let g:airline#extensions#tabline#left_sep = ' '
"let g:airline#extensions#tabline#left_alt_sep = '|'
set smartindent
set autoindent
""no swap files
set nobackup
set noswapfile
"" NERDTree toogle F12
nnoremap <F12> :NERDTreeToggle<enter>
"" Remap emmet
imap <C-e> <C-y>,
set t_Co=16
set number

set guifont=Monaco:h12
let g:NERDTreeWinPos = "right"
set guioptions-=T " Removes top toolbar
set guioptions-=r " Removes right hand scroll bar
set go-=L " Removes left hand scroll bar
autocmd User Rails let b:surround_{char2nr('-')} = "<% \r %>" " displays <% %> correctly
"":set cpoptions+=$ " puts a $ marker for the end of words/lines in cw/c$ commands

au VimEnter * IndentGuidesEnable

""Remap normal mode
:imap jj <Esc>
nnoremap <silent> <C-S> :<C-u>Update<CR>
inoremap <M-o> <Esc>o
inoremap <C-j> <Down>
let g:ragtag_global_maps = 1
:set hlsearch

" Switch to alternate file
map <Tab> :bnext<cr>
map <S-Tab> :bprevious<cr>

" With a map leader it's possible to do extra key combinations
" " like <leader>w saves the current file
let mapleader = "-"
let g:mapleader = "-"

" VIM TSLIME RSPEC
"let g:rspec_command = 'call Send_to_Tmux("bundle exec rspec -f d {spec}\n")'
" vim-rspec mappings
"map <Leader>t :call RunCurrentSpecFile()<CR>
"map <Leader>s :call RunNearestSpec()<CR>
map <Leader>l :call RunLastSpec()<CR>
map <Leader>a :call RunAllSpecs()<CR>

" turbux setting
let g:turbux_command_prefix = ' bundle exec' " default is empty
let g:turbux_command_rspec = 'rspec -f d' " default is empty

" Multiple-Cursor Default mapping
" let g:multi_cursor_next_key='<C-z>'

" vim-ruby-refactoring bindings
:nnoremap <leader>rap  :RAddParameter<cr>
:nnoremap <leader>rcpc :RConvertPostConditional<cr>
:nnoremap <leader>rel  :RExtractLet<cr>
:vnoremap <leader>rec  :RExtractConstant<cr>
:vnoremap <leader>relv :RExtractLocalVariable<cr>
:nnoremap <leader>rit  :RInlineTemp<cr>
:vnoremap <leader>rrlv :RRenameLocalVariable<cr>
:vnoremap <leader>rriv :RRenameInstanceVariable<cr>
:vnoremap <leader>rem  :RExtractMethod<cr>

" ctrlp buffer-list
:map <leader>b  :CtrlPBuffer<cr>
